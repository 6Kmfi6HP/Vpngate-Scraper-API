const fs = require('fs');
const path = require('path');

class FileHandler {
    constructor() {
        this.ensureDirectories();
    }

    ensureDirectories() {
        const dirs = ['configs', 'json'];
        dirs.forEach(dir => {
            if (!fs.existsSync(dir)) {
                fs.mkdirSync(dir);
            }
        });
    }

    saveBase64ToFile(base64Data, filename) {
        const buffer = Buffer.from(base64Data, 'base64');
        fs.writeFileSync(filename, buffer);
    }

    saveVpnConfigs(servers) {
        servers.forEach((server, index) => {
            const configPath = path.join('configs', `server_${index}_${server.countryshort}.ovpn`);
            this.saveBase64ToFile(server.openvpn_configdata_base64, configPath);
        });
    }

    generateReadme(vpnList) {
        let content = `# VPN List\n\n`;
        content += `This is an auto-generated list of VPNs retrieved from a specific source.\n\n`;
        
        content += `## Last Updated\n\n`;
        content += `This list was last updated on: ${new Date().toUTCString()}.\n\n`;
        
        content += `## Available Servers\n\n`;
        content += `Below is the list of available VPN servers:\n\n`;

        content += "| Hostname | IP Address | Ping | Speed | Country | OpenVPN Config |\n";
        content += "|----------|------------|-------|-------|---------|----------------|\n";
        vpnList.servers.forEach((server, index) => {
            let speedInMbps = (server.speed / 10000000).toFixed(2);
            content += `| ${server.hostname} | ${server.ip} | ${server.ping} | ${speedInMbps} Mbps | ${server.countrylong} | [Download ðŸ“¥](./configs/server_${index}_${server.countryshort}.ovpn) |\n`;
        });

        content += `\n\n### Note: Please respect the terms of use for each VPN.\n\n`;
        content += `---\n\n`;
        content += `Generated by [fdciabdul](#) | [imtaqin.id](imtaqin.id)\n\n`;

        fs.writeFileSync('README.md', content);
    }

    saveData(vpnList, statistics) {
        const data = {
            data: vpnList,
            lastUpdated: Date.now(),
            statistics
        };
        fs.writeFileSync(
            path.join('json', 'data.json'),
            JSON.stringify(data, null, 4),
            'utf-8'
        );
    }
}

module.exports = FileHandler; 